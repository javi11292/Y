---
import { GET as GETPosts } from "$api/post/[user]/[...page]";
import { GET as GETUser } from "$api/user/[user]";
import Button from "$lib/commons/components/button";
import Compose from "$lib/components/compose";
import Header from "$lib/components/header";
import type { Post, User } from "$lib/database";
import Layout from "$lib/layouts/root-layout.astro";
import type { LoggedAstroGlobal } from "$lib/types";
import Follow from "./_user/follow.svelte";
import Followers from "./_user/followers.svelte";
import Posts from "./_user/posts.svelte";

const [user, posts] = (await Promise.all([
	GETUser(Astro as LoggedAstroGlobal).then((response) => response.json()),
	GETPosts(Astro).then((response) => response.json()),
])) as [User, Post[]];

if (!user) {
	return Astro.redirect("/");
}
---

<Layout title={user.name}>
	<div>
		<div class="container">
			<Header>
				<div class="buttons">
					<Button icon="arrow-right" mirror href="/" />
					<Follow
						client:idle
						currentUser={(Astro as LoggedAstroGlobal).locals.user.id}
						{user}
						{posts}
					/>
				</div>
			</Header>

			<div class="content">
				@{user.name}

				<div class="followers">
					<Followers client:idle {user} {posts} />
				</div>
			</div>

			<div><hr /></div>

			<Posts client:idle {user} {posts} />
		</div>
	</div>

	<Compose client:idle />
</Layout>

<style lang="scss">
	@use "$lib/commons/theme";

	hr {
		border-color: theme.$colorNeutralDark;
	}

	.container {
		display: flex;
		flex-direction: column;
		min-height: 100%;

		> :global(:last-child) {
			flex: 1;
		}
	}

	.content {
		padding: 0 1rem 1rem;
	}

	.buttons {
		display: flex;
		justify-content: space-between;
		align-items: start;
		padding: 1rem;

		> :global(:nth-child(1)) {
			margin: -0.5rem;
		}
	}

	.followers {
		margin-top: 1rem;

		:global(span) {
			margin-right: 1rem;
			color: theme.$colorNeutral;
		}
	}
</style>
